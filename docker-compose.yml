version: '3'

services:  
  web:
    container_name: web
    build: .
    restart: always
    volumes:
      - .:/code
      - static_volume:/code/app/static
      # - logs_volume:/code/app/logs
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - elasticsearch
    networks:
      - elastic
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    volumes:
      - ./data/elastic:/var/lib/elasticsearch/data
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
    networks:
      - elastic
  nginx:
    # image: nginx:latest
    container_name: nginx
    restart: always
    build:
      context: .docker/nginx
      dockerfile: Dockerfile
    volumes:
      - .docker/nginx/conf.d/:/etc/nginx/conf.d
      - static_volume:/code/app/static
    ports:
      - 80:80
    depends_on:
      - web 
    networks:
      - elastic  
  # logstash:
  #   image: docker.elastic.co/logstash/logstash:7.14.0
  #   container_name: logstash
  #   ports:
  #     - "5000:5000"
  #   networks:
  #     - elastic
  #   depends_on:
  #     - elasticsearch_logs
  #   volumes:
  #     - ./logstash/config:/config-dir
  #   command: logstash -f /config-dir/logstash.conf
  # elasticsearch_logs:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
  #   container_name: elasticsearch_logs
  #   volumes:
  #     - ./data/elasticsearch_logs:/var/lib/elasticsearch/data
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - 9300:9200
  #   networks:
  #     - elastic
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.14.0
  #   container_name: kibana
  #   ports:
  #     - "5601:5601"
  #   networks:
  #     - elastic
  #   depends_on:
  #     - elasticsearch_logs

networks:
  elastic:
    driver: bridge 
  
volumes:
  static_volume:



      

